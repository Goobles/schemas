{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://schemas.salesforce.com/sfdx-project.json",
  "title": "Salesforce DX Project File",
  "description": "A product in the catalog",
  "type": "object",
  "additionalProperties": false,
  "required": ["packageDirectories"],
  "properties": {
    "packageDirectories": {
      "type": "array",
      "description": "Package directories indicate which directories to target when syncing source to and from the scratch org. These directories can contain source from your managed package, unmanaged package, or unpackaged source, for example, ant tool or change set.",
      "$comment": "The properties ancestorID & ancestorVersion cannot be included together, but this schema optimizes for VS Code code completion rather than pure validation.",
      "minItems": 1,
      "additionalItems": false,
      "items": {
        "type": "object",
        "dependencies": {
          "package": ["versionNumber"],
          "versionNumber": ["package"],
          "versionName": ["package", "versionNumber"],
          "versionDescription": ["package", "versionNumber"],
          "definitionFile": ["package", "versionNumber"],
          "dependencies": ["package", "versionNumber"],
          "ancestorID": ["package", "versionNumber"],
          "ancestorVersion": ["package", "versionNumber"]
        },
        "required": ["path"],
        "additionalProperties": false,
        "properties": {
          "path": {
            "$ref": "#/definitions/packageDirectory.path"
          },
          "default": {
            "$ref": "#/definitions/packageDirectory.default"
          },
          "package": {
            "$ref": "#/definitions/packageDirectory.package"
          },
          "versionName": {
            "$ref": "#/definitions/packageDirectory.versionName"
          },
          "versionDescription": {
            "$ref": "#/definitions/packageDirectory.versionDescription"
          },
          "versionNumber": {
            "$ref": "#/definitions/packageDirectory.versionNumber"
          },
          "definitionFile": {
            "$ref": "#/definitions/packageDirectory.definitionFile"
          },
          "dependencies": {
            "$ref": "#/definitions/packageDirectory.dependencies"
          },
          "ancestorID": {
            "$ref": "#/definitions/packageDirectory.ancestorID"
          },
          "ancestorVersion": {
            "$ref": "#/definitions/packageDirectory.ancestorVersion"
          }
        }
      }
    },
    "namespace": {
      "type": "string",
      "description": "The global namespace that is used with a package. The namespace must be registered with an org that is associated with your Dev Hub org. This namespace is assigned to scratch orgs created with the org:create command. If you’re creating an unlocked package, you have the option to create a package with no namespace."
    },
    "sourceApiVersion": {
      "type": "string",
      "description": "The API version that the source is compatible with. The default is the same version as the Salesforce CLI.",
      "default": "44.0"
    },
    "sfdcLoginUrl": {
      "type": "string",
      "description": "The login URL that the force:auth commands use. If not specified, the default is login.salesforce.com. Override the default value if you want users to authorize to a specific Salesforce instance. For example, if you want to authorize into a sandbox org, set this parameter to test.salesforce.com.",
      "default": "https://login.salesforce.com"
    },
    "oauthLocalPort": {
      "type": "number",
      "description": "By default, the OAuth port is 1717. However, change this port if this port is already in use, and you plan to create a connected app in your Dev Hub org to support JWT-based authorization."
    },
    "plugins": {
      "type": "object",
      "description": "Salesforce CLI plugins and configuration used with this project."
    },
    "packageAliases": {
      "type": "object",
      "description": "The Salesforce CLI updates this file with the aliases when you create a package or package version. You can also manually update this section for existing packages or package versions. You can use the alias instead of the cryptic package ID when running CLI force:package commands."
    }
  },
  "definitions": {
    "packageDirectory.path": {
      "type": "string",
      "description": "If you don’t specify a path, the Salesforce CLI uses a placeholder when you create a package."
    },
    "packageDirectory.default": {
      "type": "boolean",
      "description": "If you have specified more than one path, include this parameter for the default path to indicate which is the default package directory.",
      "default": true
    },
    "packageDirectory.package": {
      "type": "string",
      "description": "The package name you specified when creating the package."
    },
    "packageDirectory.versionName": {
      "type": "string",
      "description": "If not specified, the CLI uses versionNumber as the version name."
    },
    "packageDirectory.versionDescription": {
      "type": "string",
      "description": "Human readable version information, format not specified."
    },
    "packageDirectory.versionNumber": {
      "type": "string",
      "description": "Version numbers are formatted as major.minor.patch.build. For example, 1.2.1.8."
    },
    "packageDirectory.definitionFile": {
      "type": "string",
      "description": "Reference an external .json file to specify the features and org preferences required for the metadata of your package, such as the scratch org definition."
    },
    "packageDirectory.dependencies": {
      "type": "array",
      "description": "To specify dependencies for 2GP within the same Dev Hub, use either the package version alias or a combination of the package name and the version number.",
      "items": {
        "type": "object",
        "required": ["package"],
        "properties": {
          "package": {
            "type": "string"
          },
          "versionNumber": {
            "type": "string"
          }
        }
      }
    },
    "packageDirectory.ancestorID": {
      "type": "string",
      "description": "The ancestor that’s the immediate parent of the version that you’re creating. The package version ID to supply starts with '05i'."
    },
    "packageDirectory.ancestorVersion": {
      "type": "string",
      "description": "The ancestor that’s the immediate parent of the version that you’re creating. The ancestor version uses the format major.minor.patch.build."
    }
  }
}
